@using WebApplication2.Models
@model VotingEvent
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="~/css/style.css" type="text/css">
    @* <script type="module" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.min.js"></script> *@
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Сайт для голосования</title>
</head>
<body>

    <div class="header">
        <div class="container-header">
            <a href="../VotingEvents/VotingEventsList" class="back-arrow">&#8592;</a>
            <h1 class="title">@Model.Name</h1>
        </div>
    </div>

    <div class="container-vote">
        <!-- Team container -->
        <div class="team-container">
            <a asp-controller="Teams" asp-action="TeamCreateView" asp-route-votingEventId="@Model.Id" class="team-square">
                <p style="font-weight: bold;">Добавить команду</p>
            </a>
            @{
                int count = 0;
                foreach (var team in Model.Projects)
                {
                    count++;
                    <div class="team-square">
                        <p style="font-weight: bold;">Команда @count</p>
                        <p style="font-weight: bold;">Название проекта:</p>
                        <p>"@team.Title"</p>
                        <p style="font-weight: bold;">Участники:</p>
                        @{
                            var participants = team.Participants.ToList();
                            for (int i = 0; i < team.Participants.Count; i++)
                            {
                                if (i == 0)
                                {
                                    <p>
                                        @(i + 1)) @participants[i].Name
                                    </p>
                                }
                                else
                                {
                                    <p>
                                        @(i + 1)) @participants[i].Name
                                    </p>
                                }
                            }
                        }
                        <p style="font-weight: bold;">Голосов: @ViewBag.TotalVotes[count - 1]</p>
                    </div>
                }
            }
            <!-- Add more team squares as needed -->
        </div>
        <div>
            <!-- Vote diagram square -->
            <div>
                <canvas id="diagram" style="height: 150%; width: 150%"></canvas>
            </div>
            <div>
                <a asp-controller="Viewers" asp-action="ViewersView" asp-route-votingEventId="@Model.Id">Редактировать зрителей</a>
                <a asp-controller="Viewers" asp-action="ViewersInvitesView" asp-route-votingEventId="@Model.Id">Отправка приглашений</a>
            </div>
        </div>
    </div>

    <div class="footer">
        <p></p>
    </div>

</body>
</html>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    var projectNames = [];
    var projectValues = [];
    @{
        var tempValues = (double[])ViewData["projectValues"];
        var tempNames = (string[])ViewData["projectNames"];
        for (int i = 0; i < tempValues.Length; i++)
        {
            @:projectNames.push('@tempNames[i]');
            @:projectValues.push(parseFloat('@tempValues[i].ToString().Replace(',', '.')'));
        }

    }
    var project = {
        data: projectValues,
        backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(255, 159, 64, 0.2)'
        ],
        borderColor: [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)'
        ],
        borderWidth: 1,
        lineTension: 0,
    };

    //.getContext('2d')
    var verticalBarChart = new Chart(
        document.getElementById('diagram').getContext('2d'), {
        type: 'bar',
        data: {
            labels: projectNames,
            datasets: [project]
        },
        options: {
            indexAxis: 'x',
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                },
                title: {
                    display: true,
                    text: 'Оценка проектов'
                }
            },
            scales: {
                y: {
                    min: 0,
                    max: 5,
                    ticks: {
                        stepSize: 1
                    }
                }
            }
        }
    });
</script>