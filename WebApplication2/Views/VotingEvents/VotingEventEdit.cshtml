@using WebApplication2.Models
@model VotingEvent
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="~/css/style.css" type="text/css">
    @* <script type="module" src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/4.4.1/chart.min.js"></script> *@
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Сайт для голосования</title>
</head>
<body>

    <div class="header">
        <div class="container-header">
            <a href="../VotingEvents/VotingEventsList" class="back-arrow">&#8592;</a>
            <h1 class="title">@Model.Name</h1>
        </div>
    </div>

    <div class="container-vote">
        <!-- Team container -->
        <div class="team-container">
            <a asp-controller="Teams" asp-action="TeamCreateView" asp-route-votingEventId="@Model.Id" class="team-square">
                <p style="font-weight: bold;">Добавить команду</p>
            </a>
            @{
                int count = 0;
                foreach (var team in Model.Projects)
                {
                    count++;
                    <a asp-controller="Teams" asp-action="TeamEditView" asp-route-votingEventId="@Model.Id" asp-route-projectId="@team.Id" class="team-square">
                        <p style="font-weight: bold;">Команда @count</p>
                        <p style="font-weight: bold;">Название проекта:</p>
                        <p>"@team.Title"</p>
                        <p style="font-weight: bold;">Участники:</p>
                        @{
                            var participants = team.Users.ToList();
                            for (int i = 0; i < team.Users.Count; i++)
                            {
                                if (i == 0)
                                {
                                    <p>
                                        @(i + 1)) @participants[i].Name
                                    </p>
                                }
                                else
                                {
                                    <p>
                                        @(i + 1)) @participants[i].Name
                                    </p>
                                }
                            }
                        }
                        @{
                            if (((Dictionary<int, int>)ViewBag.TotalVotes).ContainsKey(team.Id))
                            {
                                <p style="font-weight: bold;">Голосов: @ViewBag.TotalVotes[team.Id]</p>
                            }
                            else
                            {
                                <p style="font-weight: bold;">Голосов: 0</p>
                            }
                        }
                    </a>
                }
            }
            <!-- Add more team squares as needed -->
        </div>
        <div>
            <!-- Vote diagram square -->
            <div>
                <canvas id="diagram" style="height: 150%; width: 150%"></canvas>
            </div>
            <div>
                <a asp-controller="Viewers" asp-action="ViewersView" asp-route-votingEventId="@Model.Id"><button>Редактировать зрителей</button></a>
                <a asp-controller="Viewers" asp-action="ViewersInvitesView" asp-route-votingEventId="@Model.Id"><button>Отправка приглашений</button></a>
                <a asp-controller="Votes" asp-action="VotesCriteriasView" asp-route-votingEventId="@Model.Id"><button>Редактирование критериев</button></a>
            </div>
        </div>
        <div class="projects-with-criterias-container" style="margin-top: 20px">
            @{
                int projectsCount = 0;
                foreach (var team in Model.Projects)
                {
                    string diagramName = "diagram" + projectsCount;
                    <div class="project-with-criterias">
                        <div class="project-with-criterias-name" style="font-style: italic; font-family: Arial; font-size: 18px;">
                            <div>"@team.Title"</div>
                        </div>
                        @{
                            var tempViewers = ((Dictionary<int, WebApplication2.Controllers.IntDoubleData>)ViewBag.ViewersMaxScoreDict).Where(x => x.Value.x == team.Id).ToList();
                            var tempViewersNames = ((Dictionary<int, string>)ViewBag.ViewersNames);
                            <div class="project-with-criterias-info">
                                @{
                                    int pastedViewersCount = 0;
                                    for (int i = 0; i < tempViewers.Count; i++)
                                    {
                                        if (tempViewers[i].Value.y != -1)
                                        {
                                            if (pastedViewersCount == 0)
                                            {
                                                <p style="font-family: Arial; font-size: 18px;">Поставили наивысшую оценку:</p>
                                            }
                                            if (pastedViewersCount > 4)
                                            {
                                                break;
                                            }
                                            <p style="font-style: italic; font-family: Arial; font-size: 16px;">@tempViewersNames[tempViewers[i].Key]</p>
                                            pastedViewersCount++;
                                        }
                                    }
                                }
                            </div>
                        }
                        <div class="project-with-criterias-graph">
                            <canvas style="margin: 10px" id="@diagramName"></canvas>
                        </div>
                    </div>
                    projectsCount++;
                }
            }
        </div>
    </div>

    <div class="footer">
        <p></p>
    </div>

</body>
</html>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
@{
    int criteriaCount = ((Dictionary<int, string>)ViewBag.CriteriaNames).Count;
    var projectsCriteriasAverageValues = (Dictionary<int, WebApplication2.Controllers.IntDoubleData[]>)ViewBag.ProjectsCriteriasAverageValues;
    int projectId = 0;
    foreach (var team in Model.Projects)
    {
        var tempCriteriaValues = new List<double>();
        for (int i = 0; i < criteriaCount; i++)
        {
            if (projectsCriteriasAverageValues.ContainsKey(team.Id))
            {
                tempCriteriaValues.Add(projectsCriteriasAverageValues[team.Id][i].y / projectsCriteriasAverageValues[team.Id][i].x);
            }
        }
        Html.RenderPartial("PartialChart", new Tuple<string, List<double>, Dictionary<int, string>>("diagram" + projectId, tempCriteriaValues, ((Dictionary<int, string>)ViewBag.CriteriaNames)));
        projectId++;
    }
}
<script>
    var projectNames = []
    var projectValues = []
    var projectCriterias = []

    @{
        var values = (List<KeyValuePair<int, double>>)ViewData["projects"];
        for (int i = 0; i < values.Count; i++)
        {
            @:projectNames.push('Команда @values[i].Key');
            @:projectValues.push(parseFloat('@values[i].Value.ToString().Replace(',', '.')'));
        }
    }
                        var project = {
        data: projectValues,
        backgroundColor: [
            'rgba(255, 99, 132, 0.2)',
            'rgba(54, 162, 235, 0.2)',
            'rgba(255, 206, 86, 0.2)',
            'rgba(75, 192, 192, 0.2)',
            'rgba(153, 102, 255, 0.2)',
            'rgba(255, 159, 64, 0.2)'
        ],
        borderColor: [
            'rgba(255, 99, 132, 1)',
            'rgba(54, 162, 235, 1)',
            'rgba(255, 206, 86, 1)',
            'rgba(75, 192, 192, 1)',
            'rgba(153, 102, 255, 1)',
            'rgba(255, 159, 64, 1)'
        ],
        borderWidth: 1,
        lineTension: 0,
    };

    var verticalBarChart = new Chart(
        document.getElementById('diagram').getContext('2d'), {
        type: 'bar',
        data: {
            labels: projectNames,
            datasets: [project]
        },
        options: {
            indexAxis: 'x',
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    display: false
                },
                title: {
                    display: true,
                    font: {
                        size: 18
                    },
                    text: 'Оценка проектов'
                }
            },
            scales: {
                y: {
                    min: 0,
                    max: 5,
                    ticks: {
                        font: {
                            size: 18
                        },
                        stepSize: 1
                    }
                },
                x: {
                    ticks: {
                        font: {
                            size: 18
                        }
                    }
                }
            }
        }
    });


</script>