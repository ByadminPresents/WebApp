@model VotingEvent
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <link rel="stylesheet" href="~/css/style.css" type="text/css">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>Сайт для голосования</title>
</head>
<body>
    <div class="header">
        <div class="conteiner-header">
            <h1 class="titel">Голосование</h1>
        </div>
    </div>
    <div class="container-vote">
        @{
            foreach (var project in Model.Projects)
            {
                <div class="container-vote-project">
                    <div class="prog-vote" style="text-align: center; font-style: italic; font-family: Arial; font-size: 22px;">"@project.Title"</div>
                    <div style="width: 100%;">
                        @{
                            List<KeyValuePair<string, double>> criterias = new List<KeyValuePair<string, double>>();
                            foreach (string x in Model.Criterias.Split(';'))
                            {
                                string[] tempStr = x.Split(':');
                                criterias.Add(new KeyValuePair<string, double>(tempStr[0], Convert.ToDouble(tempStr[1])));
                            }
                            int criteriaId = 0;
                            foreach (var criteria in criterias)
                            {
                                <div style="text-align: center; position: relative; top: 15px; font-family: Arial; font-size: 20px;">
                                    @criteria.Key
                                </div>
                                <div class="score-case">
                                    @{
                                        for (int i = 1; i <= 5; i++)
                                        {
                                            var tempVotes = ((List<KeyValuePair<int, KeyValuePair<int, int>>>)ViewData["votes"]).FindAll(x => x.Key == project.Id);
                                            if (tempVotes.Exists(x => x.Value.Key == i && x.Value.Value == criteriaId))
                                            {
                                                <a class="score-selected" asp-action="VotesApply" asp-controller="Votes" asp-route-userId="@ViewData["userId"]" asp-route-teamId="@project.Id" asp-route-score="@i" asp-route-criteriaId="@criteriaId">@i</a>
                                            }
                                            else
                                            {
                                                <a class="score" asp-action="VotesApply" asp-controller="Votes" asp-route-userId="@ViewData["userId"]" asp-route-teamId="@project.Id" asp-route-score="@i" asp-route-criteriaId="@criteriaId">@i</a>
                                            }
                                        }
                                    }
                                </div>
                                criteriaId++;
                            }
                        }
                    </div>
                </div>
            }
        }
    </div>
    <div class="footer">
        <p>

        </p>
    </div>

</body>
</html>

<script src="@Url.Content("~/lib/jquery/dist/jquery.js")" type="text/javascript"></script>

<script>
    $(document).scroll(function () {
        localStorage['page'] = document.URL;
        localStorage['scrollTop'] = $(document).scrollTop();
    });

    $(document).ready(function () {
        if (localStorage['page'] == document.URL) {
            $(document).scrollTop(localStorage['scrollTop']);
        }
    });
</script>